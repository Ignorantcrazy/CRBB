<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <!--导入计划表操作SQL -->
  <dataCommand name="GetWaitImportTask" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
  declare @CurID int 
      =(select top 1 ID from  [dbo].[ImportTask] where WorkStatus=0 order by ID );
      
      if(@CurID is not null)
      begin 
       SELECT top 1 [ID]
      ,[WorkName]
      ,[ImportUrl]
      ,[ImportType]
      ,[ExcuceResultText]
      ,[ExcuceResult]
      ,[ExcuceEndTime]
      ,[WorkExcuceBeginTime]
      ,[WorkStatus]
      ,[Uid]
     FROM  [dbo].[ImportTask]
     where ID=@CurID 
     update [dbo].[ImportTask] set WorkStatus=3 where ID=@CurID 
    end
]]>
    </commandText>
    <parameters> 
    </parameters>
  </dataCommand>
  <dataCommand name="GetImportTaskByID" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[  
       SELECT [ID]
      ,[WorkName]
      ,[ImportUrl]
      ,[ImportType]
      ,[ExcuceResultText]
      ,[ExcuceResult]
      ,[ExcuceEndTime]
      ,[WorkExcuceBeginTime]
      ,[WorkStatus]
      ,[Uid]
  FROM  [dbo].[ImportTask]
  where ID=@ID  
]]>
    </commandText>
    <parameters>
      <param name="@ID" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetImportTasksByStatus" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[  
       SELECT [ID]
      ,[WorkName]
      ,[ImportUrl]
      ,[ImportType]
      ,[ExcuceResultText]
      ,[ExcuceResult]
      ,[ExcuceEndTime]
      ,[WorkExcuceBeginTime]
      ,[WorkStatus]
      ,[Uid]
  FROM  [dbo].[ImportTask]
  where WorkStatus=@Status  
]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="InsertImportTask" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
    INSERT INTO [dbo].[ImportTask]
           ([WorkName]
           ,[ImportUrl]
           ,[ImportType]
           ,[ExcuceResultText]
           ,[ExcuceResult]
           ,[ExcuceEndTime]
           ,[WorkExcuceBeginTime]
           ,[WorkStatus]
            ,[Uid])
     VALUES
           ( 
            @WorkName 
           ,@ImportUrl 
           ,@ImportType 
           ,@ExcuceResultText 
           ,@ExcuceResult 
           ,@ExcuceEndTime 
           ,@WorkExcuceBeginTime 
           ,@WorkStatus 
           ,@Uid)
           SELECT SCOPE_IDENTITY();
]]>
    </commandText>
    <parameters>
      <param name="@WorkName" dbType="AnsiStringFixedLength" direction="Input"/>
      <param name="@ImportUrl" dbType="String" direction="Input"/>
      <param name="@ImportType" dbType="AnsiStringFixedLength" direction="Input"/>
      <param name="@ExcuceResultText" dbType="String" direction="Input"/>
      <param name="@ExcuceResult" dbType="Int32" direction="Input"/>
      <param name="@ExcuceEndTime" dbType="DateTime" direction="Input"/>
      <param name="@WorkExcuceBeginTime" dbType="DateTime" direction="Input"/>
      <param name="@WorkStatus" dbType="Int32" direction="Input"/>
      <param name="@Uid" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="UpdateImportTask" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
    UPDATE  [dbo].[ImportTask]
   SET [WorkName] = @WorkName
      ,[ImportUrl] = @ImportUrl
      ,[ImportType] = @ImportType
      ,[ExcuceResultText] = @ExcuceResultText
      ,[ExcuceResult] = @ExcuceResult
      ,[ExcuceEndTime] = @ExcuceEndTime
      ,[WorkExcuceBeginTime] = @WorkExcuceBeginTime
      ,[WorkStatus] = @WorkStatus
      ,[Uid]=@Uid
 WHERE ID=@ID
]]>
    </commandText>
    <parameters>
      <param name="@WorkName" dbType="AnsiStringFixedLength" direction="Input"/>
      <param name="@ImportUrl" dbType="String" direction="Input"/>
      <param name="@ImportType" dbType="AnsiStringFixedLength" direction="Input"/>
      <param name="@ExcuceResultText" dbType="String" direction="Input"/>
      <param name="@ExcuceResult" dbType="Int32" direction="Input"/>
      <param name="@ExcuceEndTime" dbType="DateTime" direction="Input"/>
      <param name="@WorkExcuceBeginTime" dbType="DateTime" direction="Input"/>
      <param name="@WorkStatus" dbType="Int32" direction="Input"/>
      <param name="@ID" dbType="Int32" direction="Input"/>
      <param name="@Uid" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="DeleteImportTask" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
      DELETE  [dbo].[ImportTask]
       WHERE  ID=@ID
      ]]>
    </commandText>
    <parameters>
      <param name="@ID" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <!-- 填充中间统计表，按省，年，月填充-->
  <dataCommand name="fillChartBaseData" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
      
if exists(select 1 from T_PatentChartBaseData P where (P.n_PatentYear=@Year or @Year is null) 
and (P.n_PatentMonth=@Month or @Month is null)
and (P.n_ProvinceID=@ProvinceId or @ProvinceId is null)
)
begin 
 delete T_PatentChartBaseData 
 where (n_PatentYear=@Year or @Year is null) and (n_PatentMonth=@Month or @Month is null)
end
INSERT INTO [dbo].[T_PatentChartBaseData]
           ([n_PatentStatus]
           ,[n_PatentType]
           ,[n_ApplicanterType]
           ,[n_CityCode]
           ,[n_ProvinceCode]
           ,[s_CityName]
           ,[s_ProvinceName]
           ,[f_Count]
           ,[d_DateTime]
           ,[n_PatentYear]
           ,[n_PatentMonth]
           ,[d_CreateDate]
           ,[d_UpdateDate]
           ,[f_Average]
           ,[n_AreaType])
select 
 0 as n_PatentStatus
 ,s_PatentType
 ,s_ApplicantType
 ,n_CityName=(select top 1 CITY_NAME from T_AddrCity where CITY_CODE=A.s_City) 
 ,n_ProvinceName=(select top 1  PROVINCE_NAME from dbo.T_AddrProvince  where PROVINCE_CODE=A.s_Province)
 ,s_City
 ,s_Province
  ,COUNT(1) as ct
  ,null as d_DateTime
  ,YEAR(S.dt_ApplyDate) as n_PatentYear
  ,MONTH(S.dt_ApplyDate) as n_PatentMonth
  ,GETDATE() as d_CreateDate
  ,null as d_UpdateDate
  ,null as f_Average
  ,n_AreaType =(select top 1 n_AreaType from T_AddrCity where CITY_ID=A.s_City)
 from 
   dbo.T_PatentCase P left join dbo.T_Applicants A on p.Application_NO=A.s_ApplicationNO and A.n_Sequence=1  
   left join dbo.T_PatentStatus S on S.s_ApplicationNO=P.Application_NO
   where (YEAR(S.dt_ApplyDate)=@Year or @Year is null) and (MONTH(S.dt_ApplyDate)=@Month or @Month is null)
      and (A.s_Province=@ProvinceId or @ProvinceId is null)
group by P.s_PatentType,s_ApplicantType,A.s_Province,A.s_City,YEAR(S.dt_ApplyDate),MONTH(S.dt_ApplyDate)
         ]]>
    </commandText>
    <parameters>
      <param name="@Year" dbType="Int32" direction="Input"/>
      <param name="@Month" dbType="Int32" direction="Input"/>
      <param name="@ProvinceId" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <!--用户消息表操作-->
  <dataCommand name="ReadMessage" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
  declare @CurID int 
       Set @CurID =(select top 1 ID from  [dbo].[T_UserMessage] where MessageStatus=0 and (UserID=@Uid or @Uid=0) order by ID );
      
      if(@CurID is not null)
      begin 
       SELECT top 1 [ID]
      ,[UserID]
      ,[Message]
      ,[MessageStatus]
      ,[MessageType]
      ,[MessageSource]
     FROM [dbo].[T_UserMessage]
     where ID=@CurID 
     update [dbo].[T_UserMessage] set MessageStatus=1 where ID=@CurID 
    end
]]>
    </commandText>
    <parameters>
      <param name="@Uid" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetUserMessageByID" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[  
       SELECT [ID]
      ,[UserID]
      ,[Message]
      ,[MessageStatus]
      ,[MessageType]
      ,[MessageSource]
  FROM [dbo].[T_UserMessage]
  where ID=@ID  
]]>
    </commandText>
    <parameters>
      <param name="@ID" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetUserMessageByStatus" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[  
      SELECT [ID]
      ,[UserID]
      ,[Message]
      ,[MessageStatus]
      ,[MessageType]
      ,[MessageSource]
  FROM [dbo].[T_UserMessage]
  where MessageStatus=@Status  
]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="InsertUserMessage" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
   INSERT INTO [dbo].[T_UserMessage]
           ([UserID]
           ,[Message]
           ,[MessageStatus]
           ,[MessageType]
           ,[MessageSource])
     VALUES
           (@UserID
           ,@Message
           ,@MessageStatus
           ,@MessageType
           ,@MessageSource)
           SELECT SCOPE_IDENTITY();
]]>
    </commandText>
    <parameters>
      <param name="@UserID" dbType="Int32" direction="Input"/>
      <param name="@Message" dbType="String" direction="Input"/>
      <param name="@MessageStatus" dbType="Int32" direction="Input"/>
      <param name="@MessageType" dbType="Int32" direction="Input"/>
      <param name="@MessageSource" dbType="String" direction="Input"/> 
    </parameters>
  </dataCommand>
  <dataCommand name="UpdateUserMessage" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
    UPDATE [dbo].[T_UserMessage]
   SET [UserID] = @UserID
      ,[Message] = @Message
      ,[MessageStatus] = @MessageStatus
      ,[MessageType] = @MessageType
      ,[MessageSource] = @MessageSource
 WHERE ID=@ID
]]>
    </commandText>
    <parameters>
      <param name="@UserID" dbType="Int32" direction="Input"/>
      <param name="@Message" dbType="String" direction="Input"/>
      <param name="@MessageStatus" dbType="Int32" direction="Input"/>
      <param name="@MessageType" dbType="Int32" direction="Input"/>
      <param name="@MessageSource" dbType="String" direction="Input"/>
      <param name="@ID" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>
  <dataCommand name="DeleteUserMessage" database="MDATA" commandType="Text">
    <commandText>
      <![CDATA[ 
      DELETE FROM [dbo].[T_UserMessage]
       WHERE  ID=@ID
      ]]>
    </commandText>
    <parameters>
      <param name="@ID" dbType="Int32" direction="Input"/>
    </parameters>
  </dataCommand>

  
</dataOperations>